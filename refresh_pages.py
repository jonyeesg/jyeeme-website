# Hacky code to scan all the images in the subdirectors in "content/page/" and populate the .md files

import os
import glob

ALBUMS_SUBDIR = "content/page/"
IMG_EXTS = ['jpg', 'jpeg']

page_folders = [f for f in os.listdir(ALBUMS_SUBDIR) if os.path.isdir(os.path.join(ALBUMS_SUBDIR, f))]

print(page_folders)

for d in page_folders:
    print(f"Processing {d}...")

    images = []
    for ext in IMG_EXTS:
        # Get all images
        files = glob.glob(os.path.join(ALBUMS_SUBDIR, d, f"*.{ext}"))
        # Strip everything but filename
        images += ([os.path.basename(f) for f in files])

    # sort images alphabetically
    images.sort()

    # Open the index.md file and edit it
    md_fname = os.path.join(ALBUMS_SUBDIR, d, 'index.md')
    with open(md_fname, encoding='utf8') as f:
        lines = f.readlines()
    second_dash = [l.strip() for l in lines].index('---', 1) # search for '---' after the first line
    lines_to_keep = lines[0:second_dash+2] # +2 because we want the '---' AND the '\n' after it

    lines_to_keep.append("<!-- everything below here is auto-generated by a python file and WILL BE LOST the next time this file is regenerated -->\n")

    def get_image_text(img_list, imgs_per_line=3):
        ret = ''
        for i in range(0, len(img_list), imgs_per_line):
            subset = img_list[i:i + imgs_per_line]
            ret += " ".join([f"![]({fname})" for fname in subset])
            ret += "\n\n"
        return ret

    image_text = get_image_text(images)

    lines_to_keep.append(image_text)

    with open(md_fname, 'w', encoding='utf8') as f:
        f.writelines(lines_to_keep)